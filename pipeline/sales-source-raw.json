{
	"name": "sales-source-raw",
	"properties": {
		"activities": [
			{
				"name": "checkSourceFile",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CatalogDataset",
						"type": "DatasetReference",
						"parameters": {
							"subject": {
								"value": "@pipeline().parameters.subject",
								"type": "Expression"
							},
							"storage_secret": {
								"value": "@pipeline().parameters.storage_secret",
								"type": "Expression"
							},
							"storage_url": {
								"value": "@pipeline().globalParameters.source_storage_url",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "GetRootMetadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "CatalogDataset",
						"type": "DatasetReference",
						"parameters": {
							"subject": {
								"value": "@concat(\n    concat(\n        pipeline().parameters.subject, \n        '/'\n    ),\n    formatDateTime(pipeline().TriggerTime, 'yyyyMMdd')\n)",
								"type": "Expression"
							},
							"storage_secret": {
								"value": "@pipeline().parameters.storage_secret",
								"type": "Expression"
							},
							"storage_url": {
								"value": "@pipeline().globalParameters.source_storage_url",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "checkSourceFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "list_of_files",
					"value": {
						"value": "@activity('checkSourceFile').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "IterateRootFolder",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetRootMetadata",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetRootMetadata').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Filter1",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "SetCurrentFileName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@variables('list_of_files')",
									"type": "Expression"
								},
								"condition": {
									"value": "@equals(item()['file_name'], variables('current_file_name'))\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SetCurrentFileName",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "current_file_name",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Filter1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(\n    empty(activity('Filter1').output.value)\n)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "CopyData",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "copy-source-raw",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"subject": {
													"value": "@pipeline().parameters.subject",
													"type": "Expression"
												},
												"storage_secret": {
													"value": "@pipeline().parameters.storage_secret",
													"type": "Expression"
												},
												"file_name": {
													"value": "@variables('current_file_name')",
													"type": "Expression"
												},
												"success_container": "imported",
												"error_container": "error"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"subject": {
				"type": "string",
				"defaultValue": "Sales"
			},
			"storage_secret": {
				"type": "string",
				"defaultValue": "storage-souce-dev-key"
			}
		},
		"variables": {
			"list_of_files": {
				"type": "Array"
			},
			"current_file_name": {
				"type": "String"
			},
			"existing_schema": {
				"type": "Array"
			},
			"schema_encoded": {
				"type": "String"
			}
		},
		"annotations": []
	}
}